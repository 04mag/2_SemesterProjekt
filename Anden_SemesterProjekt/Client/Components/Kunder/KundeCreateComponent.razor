@using Anden_SemesterProjekt.Client.Components.Ansatte.Mekanikere
@using Anden_SemesterProjekt.Client.Components.Kunder.TlfNumre
@using Anden_SemesterProjekt.Client.Components.Scootere

@if (isSubmitting)
{
    <Spinner />
}
else
{
    <EditForm EditContext="editContext" class="col-12 mb-5" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
        <ObjectGraphDataAnnotationsValidator />
        <div class="mb-3">
            <h3>Opret ny kunde</h3>
        </div>

        <div class="row p-3 mb-5 border border-primary rounded">
            <div class="col-12 mb-3">
                <label for="Navn" class="form-label">Navn</label>
                <InputText id="Navn" class="form-control" @bind-Value="kundeModel.Navn" />
                <ValidationMessage For="@(() => kundeModel.Navn)" />
            </div>

            <div class="col-12 mb-3">
                <label for="Email" class="form-label">Email</label>
                <InputText id="Email" class="form-control" @bind-Value="kundeModel.Email" />
                <ValidationMessage For="@(() => kundeModel.Email)" />
            </div>

            <div class="col-md-8 mb-3">
                <label for="Vej" class="form-label">Vej</label>
                <InputText id="Vej" class="form-control" @bind-Value="kundeModel.Adresse.Gadenavn" />
                <ValidationMessage For="@(() => kundeModel.Adresse.Gadenavn)" />
            </div>
            <div class="col-md-4 mb-3">
                <label for="Husnummer" class="form-label">Husnummer</label>
                <InputText id="Husnummer" class="form-control" @bind-Value="kundeModel.Adresse.Husnummer" />
                <ValidationMessage For="@(() => kundeModel.Adresse.Husnummer)" />
            </div>
            <div class="col-md-4 mb-3">
                <label for="Etage" class="form-label">Etage</label>
                <InputText id="Etage" class="form-control" @bind-Value="kundeModel.Adresse.Etage" />
                <ValidationMessage For="@(() => kundeModel.Adresse.Etage)" />
            </div>
            <div class="col-md-4 mb-3">
                <label for="Side" class="form-label">Side</label>
                <InputText id="Side" class="form-control" @bind-Value="kundeModel.Adresse.Side" />
                <ValidationMessage For="@(() => kundeModel.Adresse.Side)" />
            </div>
            <div class="col-md-4 mb-3">
                <label for="Dør" class="form-label">Dør</label>
                <InputText id="Dør" class="form-control" @bind-Value="kundeModel.Adresse.Dørnummer" />
                <ValidationMessage For="@(() => kundeModel.Adresse.Dørnummer)" />
            </div>
            <div class="col-md-6 mb-3">
                <label for="Postnummer" class="form-label">Postnummer</label>
                <InputText id="Postnummer" class="form-control" @bind-Value="kundeModel.Adresse.Postnummer" @onfocusout="CheckPostnummer" />
                <label style="color:red">@postnummerErrorMessage</label>
            </div>
            <div class="col-md-6 mb-3">
                <label for="By" class="form-label">By</label>
                <input id="By" class="form-control" value="@ByNavn" disabled="disabled" />
            </div>
        </div>

        <TlfNummerCreateComponent OnInputSuccess="OnTlfNummerInputSuccess" />

        @if (kundeModel.TlfNumre != null && kundeModel.TlfNumre.Count > 0)
        {
            <div class="row mb-5 p-3 border border-primary rounded">
                <h4>Telefonnumre tilføjet</h4>
                <ul>
                    @foreach (var tlfNummer in kundeModel.TlfNumre)
                    {
                        <li>
                            <TlfNummerRenderComponent TlfNummer="tlfNummer" OnDelete="OnTlfNummerInputRemove" />
                        </li>
                    }
                </ul>
            </div>
        }

        <KundeScooterCreateComponent OnCreate="OnScooterAdded" />

        @if (kundeModel.Scootere != null && kundeModel.Scootere.Count > 0)
        {
            <KundeScooterRenderComponent KundeScootere="kundeModel.Scootere" OnDeleteScooter="OnScooterRemoved" />
        }

        <div class="row p-3 mb-5 border border-primary rounded">
            <div class="col-md-6 mb-2">
                <h4>Mekaniker</h4>
            </div>
            <div class="col-md-6 mb-2">
                <button type="button" class="btn btn-primary float-end" @onclick="() => mekanikerSelectOpen = !mekanikerSelectOpen">@addMekanikerButtonText</button>
            </div>

            @if (mekanikerSelectOpen)
            {
                <div class="col-12 mb-3">
                    <MekanikerListComponent Mekanikere="Mekanikere" OnSelect="OnMekanikerSelected" />
                </div>
            }

            @if (Mekaniker != null && mekanikerSelectOpen == false)
            {
                <div class="col-12 mb-3">
                    <MekanikerRenderComponent Mekaniker="Mekaniker" />
                </div>
            }
        </div>

        <div class="col-12 mb-5">
            <button disabled="@isSubmitting" type="submit" class="btn btn-primary float-end">Opret kunde</button>
        </div>

    </EditForm>
}