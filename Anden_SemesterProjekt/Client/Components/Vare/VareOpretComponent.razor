@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using Anden_SemesterProjekt.Client.Services
@using Anden_SemesterProjekt.Shared.Models

<EditForm EditContext="editContext" class="row p-3 mb-5 border border-primary rounded" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
    <ObjectGraphDataAnnotationsValidator />
    <div class="mb-3">
        <h3>Opret ny vare/ydelse</h3>
    </div>

    <!-- Varenavn -->
    <div class="col-12 mb-3">
        <label for="Varenavn" class="form-label">Varenavn</label>
        <InputText id="Varenavn" class="form-control" @bind-Value="vareModel.Varenavn" />
        <ValidationMessage For="@(() => vareModel.Varenavn)" />
    </div>

    <!-- Beskrivelse -->
    <div class="col-12 mb-3">
        <label for="Beskrivelse" class="form-label">Beskrivelse</label>
        <InputTextArea id="Beskrivelse" class="form-control" @bind-Value="vareModel.Beskrivelse" />
        <ValidationMessage For="@(() => vareModel.Beskrivelse)" />
    </div>

    <!-- Pris -->
    <div class="col-md-6 mb-3">
        <label for="Pris" class="form-label">Pris (DKK)</label>
        <InputNumber id="Pris" class="form-control" @bind-Value="vareModel.Pris" />
        <ValidationMessage For="@(() => vareModel.Pris)" />
    </div>

    <!-- Aktiv status -->
    <div class="col-md-6 mb-3">
        <label for="Aktiv" class="form-label">Aktiv</label>
        <InputCheckbox id="Aktiv" class="form-check-input" @bind-Value="vareModel.Aktiv" />
        <ValidationMessage For="@(() => vareModel.Aktiv)" />
    </div>

    <!-- Submit-knap -->
    <div class="col-12 mb-3">
        <button disabled="@isSubmitting" type="submit" class="btn btn-primary">Opret vare</button>
    </div>
</EditForm>

@code {
    private Vare? vareModel = new Vare();
    private EditContext editContext;
    private bool isSubmitting = false;

    [Inject]
    public IVareClientService VareService {get; set;}

    protected override void OnInitialized() 
    {
        editContext = new EditContext(vareModel);
    }


    private async Task HandleValidSubmit()
    {
        isSubmitting = true;

        try
        {
            var result = await VareService.PostVare(vareModel);

            if (result != null)
            {
                Console.WriteLine($"Vare oprettet med ID: {result.Id}");
                vareModel = new Vare(); //Nulstiller model 
                editContext = new EditContext(vareModel); //Opdaterer kontekst
            }
            else
            {
                Console.WriteLine("Fejl: Varen blev ikke oprettet.");
            }
        }

        catch (Exception e) 
        {
            Console.WriteLine($"Fejl: {e.Message}");
        }
        
        finally
        {
            isSubmitting = false;
        }
    }

    private void HandleInvalidSubmit()
    {
        Console.WriteLine("Formularen indeholder fejl.");
    }
}   
            
        }
        



