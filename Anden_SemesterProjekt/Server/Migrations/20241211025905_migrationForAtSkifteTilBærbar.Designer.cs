// <auto-generated />
using System;
using Anden_SemesterProjekt.Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Anden_SemesterProjekt.Server.Migrations
{
    [DbContext(typeof(SLContext))]
    [Migration("20241211025905_migrationForAtSkifteTilBærbar")]
    partial class migrationForAtSkifteTilBærbar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("Dørnummer")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Etage")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Gadenavn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Husnummer")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("AdresseId");

                    b.HasIndex("KundeId")
                        .IsUnique();

                    b.HasIndex("Postnummer");

                    b.ToTable("Adresser");

                    b.HasData(
                        new
                        {
                            AdresseId = 1,
                            Dørnummer = "",
                            Etage = "3",
                            Gadenavn = "Hovedgaden",
                            Husnummer = "34",
                            KundeId = 1,
                            Postnummer = "6000",
                            Side = "tv"
                        },
                        new
                        {
                            AdresseId = 2,
                            Dørnummer = "23",
                            Etage = "2",
                            Gadenavn = "Borgergade",
                            Husnummer = "12",
                            KundeId = 2,
                            Postnummer = "7100",
                            Side = ""
                        },
                        new
                        {
                            AdresseId = 3,
                            Dørnummer = "",
                            Etage = "",
                            Gadenavn = "Vestergade",
                            Husnummer = "45",
                            KundeId = 3,
                            Postnummer = "7000",
                            Side = ""
                        },
                        new
                        {
                            AdresseId = 4,
                            Dørnummer = "10",
                            Etage = "1",
                            Gadenavn = "Nørregade",
                            Husnummer = "78",
                            KundeId = 4,
                            Postnummer = "7100",
                            Side = "mf"
                        },
                        new
                        {
                            AdresseId = 5,
                            Dørnummer = "",
                            Etage = "4",
                            Gadenavn = "Østergade",
                            Husnummer = "22",
                            KundeId = 5,
                            Postnummer = "6000",
                            Side = "th"
                        },
                        new
                        {
                            AdresseId = 6,
                            Dørnummer = "5",
                            Etage = "",
                            Gadenavn = "Søndergade",
                            Husnummer = "56",
                            KundeId = 6,
                            Postnummer = "7100",
                            Side = ""
                        },
                        new
                        {
                            AdresseId = 7,
                            Dørnummer = "8",
                            Etage = "2",
                            Gadenavn = "Kirkegade",
                            Husnummer = "15",
                            KundeId = 7,
                            Postnummer = "6000",
                            Side = "tv"
                        },
                        new
                        {
                            AdresseId = 8,
                            Dørnummer = "",
                            Etage = "3",
                            Gadenavn = "Skolegade",
                            Husnummer = "9",
                            KundeId = 8,
                            Postnummer = "7000",
                            Side = "th"
                        },
                        new
                        {
                            AdresseId = 9,
                            Dørnummer = "12",
                            Etage = "",
                            Gadenavn = "Algade",
                            Husnummer = "27",
                            KundeId = 9,
                            Postnummer = "7100",
                            Side = ""
                        },
                        new
                        {
                            AdresseId = 10,
                            Dørnummer = "",
                            Etage = "1",
                            Gadenavn = "Møllevej",
                            Husnummer = "33",
                            KundeId = 10,
                            Postnummer = "6000",
                            Side = "mf"
                        },
                        new
                        {
                            AdresseId = 11,
                            Dørnummer = "7",
                            Etage = "4",
                            Gadenavn = "Bakkevej",
                            Husnummer = "5",
                            KundeId = 11,
                            Postnummer = "7000",
                            Side = "tv"
                        },
                        new
                        {
                            AdresseId = 12,
                            Dørnummer = "3",
                            Etage = "",
                            Gadenavn = "Engvej",
                            Husnummer = "18",
                            KundeId = 12,
                            Postnummer = "7100",
                            Side = ""
                        },
                        new
                        {
                            AdresseId = 13,
                            Dørnummer = "",
                            Etage = "2",
                            Gadenavn = "Lærkevej",
                            Husnummer = "21",
                            KundeId = 13,
                            Postnummer = "6000",
                            Side = "th"
                        },
                        new
                        {
                            AdresseId = 14,
                            Dørnummer = "9",
                            Etage = "3",
                            Gadenavn = "Birkevej",
                            Husnummer = "44",
                            KundeId = 14,
                            Postnummer = "7000",
                            Side = "mf"
                        },
                        new
                        {
                            AdresseId = 15,
                            Dørnummer = "6",
                            Etage = "",
                            Gadenavn = "Fasanvej",
                            Husnummer = "30",
                            KundeId = 15,
                            Postnummer = "7100",
                            Side = ""
                        },
                        new
                        {
                            AdresseId = 16,
                            Dørnummer = "",
                            Etage = "1",
                            Gadenavn = "Solbakken",
                            Husnummer = "12",
                            KundeId = 16,
                            Postnummer = "6000",
                            Side = "tv"
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.By", b =>
                {
                    b.Property<string>("Postnummer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ByNavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Postnummer");

                    b.ToTable("By");

                    b.HasData(
                        new
                        {
                            Postnummer = "1000",
                            ByNavn = "København"
                        },
                        new
                        {
                            Postnummer = "2000",
                            ByNavn = "Frederiksberg"
                        },
                        new
                        {
                            Postnummer = "3000",
                            ByNavn = "Helsingør"
                        },
                        new
                        {
                            Postnummer = "4000",
                            ByNavn = "Roskilde"
                        },
                        new
                        {
                            Postnummer = "5000",
                            ByNavn = "Odense"
                        },
                        new
                        {
                            Postnummer = "6000",
                            ByNavn = "Kolding"
                        },
                        new
                        {
                            Postnummer = "7000",
                            ByNavn = "Fredericia"
                        },
                        new
                        {
                            Postnummer = "7100",
                            ByNavn = "Vejle"
                        },
                        new
                        {
                            Postnummer = "8000",
                            ByNavn = "Århus"
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Kunde", b =>
                {
                    b.Property<int>("KundeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ErAktiv")
                        .HasColumnType("bit");

                    b.Property<int?>("MekanikerId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KundeId");

                    b.HasIndex("MekanikerId");

                    b.ToTable("Kunder");

                    b.HasData(
                        new
                        {
                            KundeId = 1,
                            Email = "TrNi@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 1,
                            Navn = "Troels Nielsen"
                        },
                        new
                        {
                            KundeId = 2,
                            Email = "AnnaH@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 3,
                            Navn = "Anna Hansen"
                        },
                        new
                        {
                            KundeId = 3,
                            Email = "PeJe@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 1,
                            Navn = "Peter Jensen"
                        },
                        new
                        {
                            KundeId = 4,
                            Email = "LaNi@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 4,
                            Navn = "Lars Nielsen"
                        },
                        new
                        {
                            KundeId = 5,
                            Email = "MeSo@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 2,
                            Navn = "Mette Sørensen"
                        },
                        new
                        {
                            KundeId = 6,
                            Email = "KaAn@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 3,
                            Navn = "Kasper Andersen"
                        },
                        new
                        {
                            KundeId = 7,
                            Email = "SoPe@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 3,
                            Navn = "Sofie Pedersen"
                        },
                        new
                        {
                            KundeId = 8,
                            Email = "JoKr@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 1,
                            Navn = "Jonas Kristensen"
                        },
                        new
                        {
                            KundeId = 9,
                            Email = "CaTh@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 4,
                            Navn = "Camilla Thomsen"
                        },
                        new
                        {
                            KundeId = 10,
                            Email = "FrRa@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 1,
                            Navn = "Frederik Rasmussen"
                        },
                        new
                        {
                            KundeId = 11,
                            Email = "JensNielsen@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 2,
                            Navn = "Jens Nielsen"
                        },
                        new
                        {
                            KundeId = 12,
                            Email = "MaLa@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 3,
                            Navn = "Maja Larsen"
                        },
                        new
                        {
                            KundeId = 13,
                            Email = "NiMo@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 2,
                            Navn = "Nikolaj Møller"
                        },
                        new
                        {
                            KundeId = 14,
                            Email = "JuOl@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 1,
                            Navn = "Julie Olesen"
                        },
                        new
                        {
                            KundeId = 15,
                            Email = "HePo@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 4,
                            Navn = "Henrik Poulsen"
                        },
                        new
                        {
                            KundeId = 16,
                            Email = "KaHo@mail.dk",
                            ErAktiv = true,
                            MekanikerId = 3,
                            Navn = "Katrine Holm"
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Mekaniker", b =>
                {
                    b.Property<int>("MekanikerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MekanikerId"));

                    b.Property<bool>("ErAktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MekanikerId");

                    b.ToTable("Mekanikere");

                    b.HasData(
                        new
                        {
                            MekanikerId = 1,
                            ErAktiv = true,
                            Navn = "Troels Nielsen"
                        },
                        new
                        {
                            MekanikerId = 2,
                            ErAktiv = true,
                            Navn = "Mads Jensen"
                        },
                        new
                        {
                            MekanikerId = 3,
                            ErAktiv = true,
                            Navn = "Mikkel Larsen"
                        },
                        new
                        {
                            MekanikerId = 4,
                            ErAktiv = true,
                            Navn = "Anders Pedersen"
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Mærke", b =>
                {
                    b.Property<int>("MærkeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MærkeId"));

                    b.Property<string>("ScooterMærke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MærkeId");

                    b.ToTable("Mærker");

                    b.HasData(
                        new
                        {
                            MærkeId = 1,
                            ScooterMærke = "Aprilla"
                        },
                        new
                        {
                            MærkeId = 2,
                            ScooterMærke = "Derbi"
                        },
                        new
                        {
                            MærkeId = 3,
                            ScooterMærke = "Karma"
                        },
                        new
                        {
                            MærkeId = 4,
                            ScooterMærke = "Lindebjerg"
                        },
                        new
                        {
                            MærkeId = 5,
                            ScooterMærke = "Pegasus"
                        },
                        new
                        {
                            MærkeId = 6,
                            ScooterMærke = "Peugeot"
                        },
                        new
                        {
                            MærkeId = 7,
                            ScooterMærke = "PGO"
                        },
                        new
                        {
                            MærkeId = 8,
                            ScooterMærke = "Puch"
                        },
                        new
                        {
                            MærkeId = 9,
                            ScooterMærke = "Vespa"
                        },
                        new
                        {
                            MærkeId = 10,
                            ScooterMærke = "Yamaha"
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Ordre", b =>
                {
                    b.Property<int>("OrdreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdreId"));

                    b.Property<string>("Bemærkninger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BetalingsDato")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ErAfsluttet")
                        .HasColumnType("bit");

                    b.Property<bool>("ErBetalt")
                        .HasColumnType("bit");

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<int?>("KundeScooterId")
                        .HasColumnType("int");

                    b.Property<int?>("MekanikerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SlutDato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDato")
                        .HasColumnType("datetime2");

                    b.HasKey("OrdreId");

                    b.HasIndex("KundeId");

                    b.HasIndex("KundeScooterId");

                    b.HasIndex("MekanikerId");

                    b.ToTable("Ordrer");

                    b.HasData(
                        new
                        {
                            OrdreId = 1,
                            Bemærkninger = "",
                            BetalingsDato = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ErAfsluttet = true,
                            ErBetalt = true,
                            KundeId = 1,
                            KundeScooterId = 1,
                            MekanikerId = 1,
                            SlutDato = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDato = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrdreId = 2,
                            Bemærkninger = "Dækskifte til nye dæk, samt skifte af kæde.",
                            ErAfsluttet = false,
                            ErBetalt = false,
                            KundeId = 4,
                            KundeScooterId = 4,
                            MekanikerId = 4,
                            SlutDato = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDato = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            OrdreId = 3,
                            Bemærkninger = "",
                            ErAfsluttet = true,
                            ErBetalt = false,
                            KundeId = 10,
                            SlutDato = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDato = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Scooter", b =>
                {
                    b.Property<int>("ScooterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScooterId"));

                    b.Property<bool>("ErAktiv")
                        .HasColumnType("bit");

                    b.Property<int>("MærkeId")
                        .HasColumnType("int");

                    b.Property<string>("Registreringsnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stelnummer")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ScooterId");

                    b.HasIndex("MærkeId");

                    b.ToTable("Scootere");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.TlfNummer", b =>
                {
                    b.Property<int>("TlfNummerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TlfNummerId"));

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonNummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TlfNummerId");

                    b.HasIndex("KundeId");

                    b.ToTable("TlfNumre");

                    b.HasData(
                        new
                        {
                            TlfNummerId = 1,
                            KundeId = 1,
                            TelefonNummer = "34345678"
                        },
                        new
                        {
                            TlfNummerId = 2,
                            KundeId = 1,
                            TelefonNummer = "47254321"
                        },
                        new
                        {
                            TlfNummerId = 3,
                            KundeId = 2,
                            TelefonNummer = "23456789"
                        },
                        new
                        {
                            TlfNummerId = 4,
                            KundeId = 3,
                            TelefonNummer = "34567890"
                        },
                        new
                        {
                            TlfNummerId = 5,
                            KundeId = 4,
                            TelefonNummer = "45678901"
                        },
                        new
                        {
                            TlfNummerId = 6,
                            KundeId = 5,
                            TelefonNummer = "56789012"
                        },
                        new
                        {
                            TlfNummerId = 7,
                            KundeId = 6,
                            TelefonNummer = "67890123"
                        },
                        new
                        {
                            TlfNummerId = 8,
                            KundeId = 7,
                            TelefonNummer = "78901234"
                        },
                        new
                        {
                            TlfNummerId = 9,
                            KundeId = 8,
                            TelefonNummer = "89012345"
                        },
                        new
                        {
                            TlfNummerId = 10,
                            KundeId = 9,
                            TelefonNummer = "90123456"
                        },
                        new
                        {
                            TlfNummerId = 11,
                            KundeId = 10,
                            TelefonNummer = "23456780"
                        },
                        new
                        {
                            TlfNummerId = 12,
                            KundeId = 11,
                            TelefonNummer = "34567891"
                        },
                        new
                        {
                            TlfNummerId = 13,
                            KundeId = 12,
                            TelefonNummer = "45678902"
                        },
                        new
                        {
                            TlfNummerId = 14,
                            KundeId = 13,
                            TelefonNummer = "56789013"
                        },
                        new
                        {
                            TlfNummerId = 15,
                            KundeId = 14,
                            TelefonNummer = "67890124"
                        },
                        new
                        {
                            TlfNummerId = 16,
                            KundeId = 15,
                            TelefonNummer = "78901235"
                        },
                        new
                        {
                            TlfNummerId = 17,
                            KundeId = 16,
                            TelefonNummer = "89012346"
                        },
                        new
                        {
                            TlfNummerId = 18,
                            KundeId = 2,
                            TelefonNummer = "90123457"
                        },
                        new
                        {
                            TlfNummerId = 19,
                            KundeId = 3,
                            TelefonNummer = "23456781"
                        },
                        new
                        {
                            TlfNummerId = 20,
                            KundeId = 4,
                            TelefonNummer = "34567892"
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Udlejning", b =>
                {
                    b.Property<int>("UdlejningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UdlejningId"));

                    b.Property<double>("AntalKmKørt")
                        .HasColumnType("float");

                    b.Property<double>("ForsikringPrDag")
                        .HasColumnType("float");

                    b.Property<double>("LejePrDag")
                        .HasColumnType("float");

                    b.Property<int>("OrdreId")
                        .HasColumnType("int");

                    b.Property<double>("PrisPrKm")
                        .HasColumnType("float");

                    b.Property<double>("Selvrisiko")
                        .HasColumnType("float");

                    b.Property<bool>("SelvrisikoUdløst")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SlutDato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDato")
                        .HasColumnType("datetime2");

                    b.Property<int>("UdlejningsScooterId")
                        .HasColumnType("int");

                    b.HasKey("UdlejningId");

                    b.HasIndex("OrdreId")
                        .IsUnique();

                    b.HasIndex("UdlejningsScooterId");

                    b.ToTable("Udlejninger");

                    b.HasData(
                        new
                        {
                            UdlejningId = 1,
                            AntalKmKørt = 14.0,
                            ForsikringPrDag = 100.0,
                            LejePrDag = 200.0,
                            OrdreId = 1,
                            PrisPrKm = 0.53000000000000003,
                            Selvrisiko = 1000.0,
                            SelvrisikoUdløst = true,
                            SlutDato = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDato = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UdlejningsScooterId = 17
                        },
                        new
                        {
                            UdlejningId = 2,
                            AntalKmKørt = 0.0,
                            ForsikringPrDag = 100.0,
                            LejePrDag = 200.0,
                            OrdreId = 2,
                            PrisPrKm = 0.53000000000000003,
                            Selvrisiko = 1000.0,
                            SelvrisikoUdløst = false,
                            SlutDato = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDato = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            UdlejningsScooterId = 19
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Vare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ErAktiv")
                        .HasColumnType("bit");

                    b.Property<double>("Pris")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Varer", (string)null);

                    b.UseTptMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Beskrivelse = "Hjelm",
                            ErAktiv = true,
                            Pris = 500.0
                        },
                        new
                        {
                            Id = 2,
                            Beskrivelse = "Handsker",
                            ErAktiv = true,
                            Pris = 200.0
                        },
                        new
                        {
                            Id = 3,
                            Beskrivelse = "Jakke",
                            ErAktiv = true,
                            Pris = 800.0
                        },
                        new
                        {
                            Id = 4,
                            Beskrivelse = "Bukser",
                            ErAktiv = true,
                            Pris = 600.0
                        },
                        new
                        {
                            Id = 5,
                            Beskrivelse = "Støvler",
                            ErAktiv = true,
                            Pris = 400.0
                        },
                        new
                        {
                            Id = 6,
                            Beskrivelse = "Motorolie",
                            ErAktiv = true,
                            Pris = 200.0
                        },
                        new
                        {
                            Id = 7,
                            Beskrivelse = "Pære (hvid)",
                            ErAktiv = true,
                            Pris = 300.0
                        },
                        new
                        {
                            Id = 8,
                            Beskrivelse = "Pære (rød)",
                            ErAktiv = true,
                            Pris = 100.0
                        },
                        new
                        {
                            Id = 9,
                            Beskrivelse = "Pære (orange)",
                            ErAktiv = true,
                            Pris = 200.0
                        },
                        new
                        {
                            Id = 10,
                            Beskrivelse = "Tændrør",
                            ErAktiv = true,
                            Pris = 50.0
                        },
                        new
                        {
                            Id = 11,
                            Beskrivelse = "Batteri",
                            ErAktiv = true,
                            Pris = 300.0
                        },
                        new
                        {
                            Id = 12,
                            Beskrivelse = "Dæk",
                            ErAktiv = true,
                            Pris = 500.0
                        },
                        new
                        {
                            Id = 13,
                            Beskrivelse = "Fælg",
                            ErAktiv = true,
                            Pris = 400.0
                        },
                        new
                        {
                            Id = 14,
                            Beskrivelse = "Kædeskærm",
                            ErAktiv = true,
                            Pris = 100.0
                        },
                        new
                        {
                            Id = 15,
                            Beskrivelse = "Kæde",
                            ErAktiv = true,
                            Pris = 200.0
                        },
                        new
                        {
                            Id = 16,
                            Beskrivelse = "Mobil holder",
                            ErAktiv = true,
                            Pris = 100.0
                        },
                        new
                        {
                            Id = 17,
                            Beskrivelse = "GPS",
                            ErAktiv = true,
                            Pris = 300.0
                        },
                        new
                        {
                            Id = 18,
                            Beskrivelse = "Bluetooth headset",
                            ErAktiv = true,
                            Pris = 200.0
                        },
                        new
                        {
                            Id = 19,
                            Beskrivelse = "Rygstøtte",
                            ErAktiv = true,
                            Pris = 100.0
                        },
                        new
                        {
                            Id = 20,
                            Beskrivelse = "Topboks",
                            ErAktiv = true,
                            Pris = 500.0
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.VareLinje", b =>
                {
                    b.Property<int>("VareLinjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VareLinjeId"));

                    b.Property<int?>("Antal")
                        .HasColumnType("int");

                    b.Property<int>("OrdreId")
                        .HasColumnType("int");

                    b.Property<double>("Rabat")
                        .HasColumnType("float");

                    b.Property<string>("VareBeskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VareId")
                        .HasColumnType("int");

                    b.Property<double>("VarePris")
                        .HasColumnType("float");

                    b.Property<double>("YdelseAntalTimer")
                        .HasColumnType("float");

                    b.HasKey("VareLinjeId");

                    b.HasIndex("OrdreId");

                    b.HasIndex("VareId");

                    b.ToTable("VareLinjer");

                    b.HasData(
                        new
                        {
                            VareLinjeId = 1,
                            Antal = 1,
                            OrdreId = 1,
                            Rabat = 50.0,
                            VareBeskrivelse = "Service",
                            VareId = 21,
                            VarePris = 500.0,
                            YdelseAntalTimer = 4.0
                        },
                        new
                        {
                            VareLinjeId = 2,
                            Antal = 2,
                            OrdreId = 2,
                            Rabat = 0.0,
                            VareBeskrivelse = "Dæk",
                            VareId = 12,
                            VarePris = 500.0,
                            YdelseAntalTimer = 0.0
                        },
                        new
                        {
                            VareLinjeId = 3,
                            Antal = 2,
                            OrdreId = 2,
                            Rabat = 25.0,
                            VareBeskrivelse = "Dækskifte",
                            VareId = 24,
                            VarePris = 100.0,
                            YdelseAntalTimer = 0.25
                        },
                        new
                        {
                            VareLinjeId = 4,
                            Antal = 1,
                            OrdreId = 2,
                            Rabat = 0.0,
                            VareBeskrivelse = "Kæde skift",
                            VareId = 36,
                            VarePris = 280.0,
                            YdelseAntalTimer = 1.0
                        },
                        new
                        {
                            VareLinjeId = 5,
                            Antal = 1,
                            OrdreId = 3,
                            Rabat = 0.0,
                            VareBeskrivelse = "Hjelm",
                            VareId = 1,
                            VarePris = 500.0,
                            YdelseAntalTimer = 0.0
                        },
                        new
                        {
                            VareLinjeId = 6,
                            Antal = 1,
                            OrdreId = 3,
                            Rabat = 200.0,
                            VareBeskrivelse = "Handsker",
                            VareId = 2,
                            VarePris = 200.0,
                            YdelseAntalTimer = 0.0
                        },
                        new
                        {
                            VareLinjeId = 7,
                            Antal = 1,
                            OrdreId = 3,
                            Rabat = 0.0,
                            VareBeskrivelse = "Jakke",
                            VareId = 3,
                            VarePris = 800.0,
                            YdelseAntalTimer = 0.0
                        },
                        new
                        {
                            VareLinjeId = 8,
                            Antal = 1,
                            OrdreId = 3,
                            Rabat = 0.0,
                            VareBeskrivelse = "Bukser",
                            VareId = 4,
                            VarePris = 600.0,
                            YdelseAntalTimer = 0.0
                        },
                        new
                        {
                            VareLinjeId = 9,
                            Antal = 1,
                            OrdreId = 3,
                            Rabat = 0.0,
                            VareBeskrivelse = "Støvler",
                            VareId = 5,
                            VarePris = 400.0,
                            YdelseAntalTimer = 0.0
                        });
                });

            modelBuilder.Entity("MekanikerMærke", b =>
                {
                    b.Property<int>("MekanikerId")
                        .HasColumnType("int");

                    b.Property<int>("MærkeId")
                        .HasColumnType("int");

                    b.HasKey("MekanikerId", "MærkeId");

                    b.HasIndex("MærkeId");

                    b.ToTable("MekanikerMærke");

                    b.HasData(
                        new
                        {
                            MekanikerId = 1,
                            MærkeId = 1
                        },
                        new
                        {
                            MekanikerId = 1,
                            MærkeId = 4
                        },
                        new
                        {
                            MekanikerId = 1,
                            MærkeId = 8
                        },
                        new
                        {
                            MekanikerId = 1,
                            MærkeId = 5
                        },
                        new
                        {
                            MekanikerId = 1,
                            MærkeId = 2
                        },
                        new
                        {
                            MekanikerId = 1,
                            MærkeId = 10
                        },
                        new
                        {
                            MekanikerId = 2,
                            MærkeId = 6
                        },
                        new
                        {
                            MekanikerId = 2,
                            MærkeId = 3
                        },
                        new
                        {
                            MekanikerId = 2,
                            MærkeId = 7
                        },
                        new
                        {
                            MekanikerId = 2,
                            MærkeId = 10
                        },
                        new
                        {
                            MekanikerId = 3,
                            MærkeId = 2
                        },
                        new
                        {
                            MekanikerId = 3,
                            MærkeId = 8
                        },
                        new
                        {
                            MekanikerId = 3,
                            MærkeId = 9
                        },
                        new
                        {
                            MekanikerId = 3,
                            MærkeId = 10
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 1
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 4
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 5
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 3
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 6
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 7
                        },
                        new
                        {
                            MekanikerId = 4,
                            MærkeId = 9
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.KundeScooter", b =>
                {
                    b.HasBaseType("Anden_SemesterProjekt.Shared.Models.Scooter");

                    b.Property<int>("KundeId")
                        .HasColumnType("int");

                    b.HasIndex("KundeId");

                    b.ToTable("KundeScootere", (string)null);

                    b.HasData(
                        new
                        {
                            ScooterId = 1,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "HB3827",
                            Stelnummer = "Kj37h3GS9jOpI800J",
                            KundeId = 1
                        },
                        new
                        {
                            ScooterId = 2,
                            ErAktiv = true,
                            MærkeId = 2,
                            Registreringsnummer = "VB7382",
                            Stelnummer = "1HGBH41JXMN109186",
                            KundeId = 2
                        },
                        new
                        {
                            ScooterId = 3,
                            ErAktiv = true,
                            MærkeId = 3,
                            Registreringsnummer = "AF3234",
                            Stelnummer = "2HGCM82633A004352",
                            KundeId = 3
                        },
                        new
                        {
                            ScooterId = 4,
                            ErAktiv = true,
                            MærkeId = 4,
                            Registreringsnummer = "CD5634",
                            Stelnummer = "1HGCM82633A004353",
                            KundeId = 4
                        },
                        new
                        {
                            ScooterId = 5,
                            ErAktiv = true,
                            MærkeId = 5,
                            Registreringsnummer = "EF9072",
                            Stelnummer = "JH4KA8260MC000000",
                            KundeId = 5
                        },
                        new
                        {
                            ScooterId = 6,
                            ErAktiv = true,
                            MærkeId = 6,
                            Registreringsnummer = "GH3656",
                            Stelnummer = "1HGCM82633A004354",
                            KundeId = 6
                        },
                        new
                        {
                            ScooterId = 7,
                            ErAktiv = true,
                            MærkeId = 7,
                            Registreringsnummer = "IJ7630",
                            Stelnummer = "2HGCM82633A004355",
                            KundeId = 7
                        },
                        new
                        {
                            ScooterId = 8,
                            ErAktiv = true,
                            MærkeId = 8,
                            Registreringsnummer = "KL1533",
                            Stelnummer = "1HGCM82633A004356",
                            KundeId = 8
                        },
                        new
                        {
                            ScooterId = 9,
                            ErAktiv = true,
                            MærkeId = 9,
                            Registreringsnummer = "MN2648",
                            Stelnummer = "JH4KA8260MC000001",
                            KundeId = 9
                        },
                        new
                        {
                            ScooterId = 10,
                            ErAktiv = true,
                            MærkeId = 10,
                            Registreringsnummer = "OP9314",
                            Stelnummer = "1HGCM82633A004357",
                            KundeId = 10
                        },
                        new
                        {
                            ScooterId = 11,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "QR5452",
                            Stelnummer = "2HGCM82633A004358",
                            KundeId = 11
                        },
                        new
                        {
                            ScooterId = 12,
                            ErAktiv = true,
                            MærkeId = 2,
                            Registreringsnummer = "ST3850",
                            Stelnummer = "1HGCM82633A004359",
                            KundeId = 12
                        },
                        new
                        {
                            ScooterId = 13,
                            ErAktiv = true,
                            MærkeId = 3,
                            Registreringsnummer = "UV2254",
                            Stelnummer = "JH4KA8260MC000002",
                            KundeId = 13
                        },
                        new
                        {
                            ScooterId = 14,
                            ErAktiv = true,
                            MærkeId = 4,
                            Registreringsnummer = "WX5375",
                            Stelnummer = "1HGCM82633A004360",
                            KundeId = 14
                        },
                        new
                        {
                            ScooterId = 15,
                            ErAktiv = true,
                            MærkeId = 5,
                            Registreringsnummer = "YZ3052",
                            Stelnummer = "2HGCM82633A004361",
                            KundeId = 15
                        },
                        new
                        {
                            ScooterId = 16,
                            ErAktiv = true,
                            MærkeId = 6,
                            Registreringsnummer = "AB3651",
                            Stelnummer = "1HGCM82633A004362",
                            KundeId = 16
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.UdlejningsScooter", b =>
                {
                    b.HasBaseType("Anden_SemesterProjekt.Shared.Models.Scooter");

                    b.Property<bool>("ErTilgængelig")
                        .HasColumnType("bit");

                    b.ToTable("UdlejningsScootere", (string)null);

                    b.HasData(
                        new
                        {
                            ScooterId = 17,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "CD3654",
                            Stelnummer = "1HGCM82633A004363",
                            ErTilgængelig = true
                        },
                        new
                        {
                            ScooterId = 18,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "EF9073",
                            Stelnummer = "2HGCM82633A004364",
                            ErTilgængelig = true
                        },
                        new
                        {
                            ScooterId = 19,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "GH1234",
                            Stelnummer = "3HGCM82633A004365",
                            ErTilgængelig = false
                        },
                        new
                        {
                            ScooterId = 20,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "IJ5678",
                            Stelnummer = "4HGCM82633A004366",
                            ErTilgængelig = true
                        },
                        new
                        {
                            ScooterId = 21,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "KL9012",
                            Stelnummer = "5HGCM82633A004367",
                            ErTilgængelig = true
                        },
                        new
                        {
                            ScooterId = 22,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "MN3456",
                            Stelnummer = "6HGCM82633A004368",
                            ErTilgængelig = true
                        },
                        new
                        {
                            ScooterId = 23,
                            ErAktiv = true,
                            MærkeId = 1,
                            Registreringsnummer = "OP7890",
                            Stelnummer = "7HGCM82633A004369",
                            ErTilgængelig = true
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Ydelse", b =>
                {
                    b.HasBaseType("Anden_SemesterProjekt.Shared.Models.Vare");

                    b.Property<double>("AntalTimer")
                        .HasColumnType("float");

                    b.ToTable("Ydelser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 21,
                            Beskrivelse = "Service",
                            ErAktiv = true,
                            Pris = 500.0,
                            AntalTimer = 4.0
                        },
                        new
                        {
                            Id = 22,
                            Beskrivelse = "Reparation (u/ reservedele)",
                            ErAktiv = true,
                            Pris = 200.0,
                            AntalTimer = 1.0
                        },
                        new
                        {
                            Id = 23,
                            Beskrivelse = "Syn",
                            ErAktiv = true,
                            Pris = 300.0,
                            AntalTimer = 1.0
                        },
                        new
                        {
                            Id = 24,
                            Beskrivelse = "Dækskift",
                            ErAktiv = true,
                            Pris = 100.0,
                            AntalTimer = 0.25
                        },
                        new
                        {
                            Id = 25,
                            Beskrivelse = "Bremse service",
                            ErAktiv = true,
                            Pris = 300.0,
                            AntalTimer = 1.0
                        },
                        new
                        {
                            Id = 26,
                            Beskrivelse = "Motor service",
                            ErAktiv = true,
                            Pris = 800.0,
                            AntalTimer = 3.0
                        },
                        new
                        {
                            Id = 27,
                            Beskrivelse = "Elmotor service",
                            ErAktiv = true,
                            Pris = 700.0,
                            AntalTimer = 3.0
                        },
                        new
                        {
                            Id = 28,
                            Beskrivelse = "Fejlfinding",
                            ErAktiv = true,
                            Pris = 200.0,
                            AntalTimer = 1.0
                        },
                        new
                        {
                            Id = 29,
                            Beskrivelse = "Rustbeskyttelse",
                            ErAktiv = true,
                            Pris = 1400.0,
                            AntalTimer = 6.0
                        },
                        new
                        {
                            Id = 30,
                            Beskrivelse = "Lakering",
                            ErAktiv = true,
                            Pris = 2000.0,
                            AntalTimer = 8.0
                        },
                        new
                        {
                            Id = 31,
                            Beskrivelse = "Polering",
                            ErAktiv = true,
                            Pris = 500.0,
                            AntalTimer = 2.0
                        },
                        new
                        {
                            Id = 32,
                            Beskrivelse = "Rengøring",
                            ErAktiv = true,
                            Pris = 250.0,
                            AntalTimer = 1.0
                        },
                        new
                        {
                            Id = 33,
                            Beskrivelse = "Dæktryk tjek",
                            ErAktiv = true,
                            Pris = 50.0,
                            AntalTimer = 0.14999999999999999
                        },
                        new
                        {
                            Id = 34,
                            Beskrivelse = "Kæde smøring",
                            ErAktiv = true,
                            Pris = 80.0,
                            AntalTimer = 0.20000000000000001
                        },
                        new
                        {
                            Id = 35,
                            Beskrivelse = "Kæde stramning",
                            ErAktiv = true,
                            Pris = 100.0,
                            AntalTimer = 0.25
                        },
                        new
                        {
                            Id = 36,
                            Beskrivelse = "Kæde skift",
                            ErAktiv = true,
                            Pris = 280.0,
                            AntalTimer = 1.0
                        },
                        new
                        {
                            Id = 37,
                            Beskrivelse = "Vask",
                            ErAktiv = true,
                            Pris = 100.0,
                            AntalTimer = 0.25
                        });
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Adresse", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Kunde", "Kunde")
                        .WithOne("Adresse")
                        .HasForeignKey("Anden_SemesterProjekt.Shared.Models.Adresse", "KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.By", "By")
                        .WithMany("Adresser")
                        .HasForeignKey("Postnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("By");

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Kunde", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Mekaniker", "TilknyttetMekaniker")
                        .WithMany()
                        .HasForeignKey("MekanikerId");

                    b.Navigation("TilknyttetMekaniker");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Ordre", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Kunde", "Kunde")
                        .WithMany("Ordrer")
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.KundeScooter", "KundeScooter")
                        .WithMany("Ordrer")
                        .HasForeignKey("KundeScooterId");

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Mekaniker", "Mekaniker")
                        .WithMany("Ordrer")
                        .HasForeignKey("MekanikerId");

                    b.Navigation("Kunde");

                    b.Navigation("KundeScooter");

                    b.Navigation("Mekaniker");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Scooter", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Mærke", "Mærke")
                        .WithMany("Scootere")
                        .HasForeignKey("MærkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mærke");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.TlfNummer", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Kunde", "Kunde")
                        .WithMany("TlfNumre")
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Udlejning", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Ordre", "Ordre")
                        .WithOne("Udlejning")
                        .HasForeignKey("Anden_SemesterProjekt.Shared.Models.Udlejning", "OrdreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.UdlejningsScooter", "UdlejningsScooter")
                        .WithMany("Udlejninger")
                        .HasForeignKey("UdlejningsScooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordre");

                    b.Navigation("UdlejningsScooter");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.VareLinje", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Ordre", "Ordre")
                        .WithMany("VareLinjer")
                        .HasForeignKey("OrdreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Vare", "Vare")
                        .WithMany("VareLinjer")
                        .HasForeignKey("VareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ordre");

                    b.Navigation("Vare");
                });

            modelBuilder.Entity("MekanikerMærke", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Mekaniker", null)
                        .WithMany()
                        .HasForeignKey("MekanikerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Mærke", null)
                        .WithMany()
                        .HasForeignKey("MærkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.KundeScooter", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Kunde", "Kunde")
                        .WithMany("Scootere")
                        .HasForeignKey("KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Scooter", null)
                        .WithOne()
                        .HasForeignKey("Anden_SemesterProjekt.Shared.Models.KundeScooter", "ScooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.UdlejningsScooter", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Scooter", null)
                        .WithOne()
                        .HasForeignKey("Anden_SemesterProjekt.Shared.Models.UdlejningsScooter", "ScooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Ydelse", b =>
                {
                    b.HasOne("Anden_SemesterProjekt.Shared.Models.Vare", null)
                        .WithOne()
                        .HasForeignKey("Anden_SemesterProjekt.Shared.Models.Ydelse", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.By", b =>
                {
                    b.Navigation("Adresser");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Kunde", b =>
                {
                    b.Navigation("Adresse")
                        .IsRequired();

                    b.Navigation("Ordrer");

                    b.Navigation("Scootere");

                    b.Navigation("TlfNumre");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Mekaniker", b =>
                {
                    b.Navigation("Ordrer");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Mærke", b =>
                {
                    b.Navigation("Scootere");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Ordre", b =>
                {
                    b.Navigation("Udlejning");

                    b.Navigation("VareLinjer");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.Vare", b =>
                {
                    b.Navigation("VareLinjer");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.KundeScooter", b =>
                {
                    b.Navigation("Ordrer");
                });

            modelBuilder.Entity("Anden_SemesterProjekt.Shared.Models.UdlejningsScooter", b =>
                {
                    b.Navigation("Udlejninger");
                });
#pragma warning restore 612, 618
        }
    }
}
